spring:
  application:
    n: banking-service
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:dev}

  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5433/finplatform_timeseries}
    username: ${SPRING_DATASOURCE_USERNAME:finplatform}
    password: ${SPRING_DATASOURCE_PASSWORD:password}
    driver-class-n: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 10
      idle-timeout: 300000
      connection-timeout: 20000
      max-lifetime: 1200000

  jpa:
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        jdbc:
          batch_size: 50
        order_inserts: true
        order_updates: true
    show-sql: false
    open-in-view: false

  flyway:
    enabled: true
    baseline-on-migrate: true
    locations: classpath:db/migration
    validate-on-migrate: true

  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: all
      retries: 3
      compression-type: snappy
      batch-size: 32768
      linger-ms: 20
    consumer:
      group-id: banking-service-group
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      auto-offset-reset: earliest
      max-poll-records: 500
      properties:
        spring.json.trusted.packages: "*"

  redis:
    host: ${REDIS_HOST:localhost}
    port: 6379
    password: ${REDIS_PASSWORD:}
    timeout: 2000ms

  cache:
    type: redis
    redis:
      time-to-live: 1800000 # 30 minutes

  batch:
    job:
      enabled: false
    jdbc:
      initialize-schema: always

server:
  port: 8082

eureka:
  instance:
    prefer-ip-address: true
    instance-id: ${spring.application.n}:${random.value}
  client:
    service-url:
      defaultZone: ${EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE:http://localhost:8761/eureka/}

plaid:
  client-id: ${PLAID_CLIENT_ID}
  secret: ${PLAID_SECRET}
  environment: ${PLAID_ENVIRONMENT:sandbox}
  webhook-url: ${PLAID_WEBHOOK_URL:https://api.finplatform.com/webhooks/plaid}

feign:
  client:
    config:
      default:
        connectTimeout: 5000
        readTimeout: 5000
  circuitbreaker:
    enabled: true

management:
  endpoints:
    web:
      exposure:
        include: "*"
  metrics:
    export:
      prometheus:
        enabled: true

logging:
  level:
    com.finplatform.bankingservice: DEBUG
    com.plaid: DEBUG
    org.springframework.batch: DEBUG