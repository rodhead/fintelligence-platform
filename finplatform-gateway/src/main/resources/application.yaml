spring:
  application:
    n: api-gateway
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:dev}
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
      routes:
        # User Service Routes
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/api/users/**, /api/auth/**
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/api/(?<segment>.*), /${segment}
            - n: AuthenticationFilter
            - n: CircuitBreaker
              args:
                n: user-service-cb
                fallbackUri: forward:/fallback/user-service
            - n: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 10
                redis-rate-limiter.burstCapacity: 20
                redis-rate-limiter.requestedTokens: 1

        # Banking Service Routes
        - id: banking-service
          uri: lb://BANKING-SERVICE
          predicates:
            - Path=/api/banks/**, /api/transactions/**
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/api/(?<segment>.*), /${segment}
            - n: AuthenticationFilter
            - n: CircuitBreaker
              args:
                n: banking-service-cb
                fallbackUri: forward:/fallback/banking-service

        # Analytics Service Routes
        - id: analytics-service
          uri: lb://ANALYTICS-SERVICE
          predicates:
            - Path=/api/analytics/**, /api/ml/**
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/api/(?<segment>.*), /${segment}
            - n: AuthenticationFilter

        # Notification Service Routes
        - id: notification-service
          uri: lb://NOTIFICATION-SERVICE
          predicates:
            - Path=/api/notifications/**
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/api/(?<segment>.*), /${segment}
            - n: AuthenticationFilter

      globalcors:
        corsConfigurations:
          '[/**]':
            allowedOrigins:
              - "http://localhost:4200"
              - "http://localhost:3000"
            allowedMethods:
              - GET
              - POST
              - PUT
              - DELETE
              - OPTIONS
            allowedHeaders:
              - "*"
            allowCredentials: true
            maxAge: 3600

      default-filters:
        - DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin
        - AddResponseHeader=X-Frame-Options, DENY
        - AddResponseHeader=X-Content-Type-Options, nosniff
        - AddResponseHeader=X-XSS-Protection, 1; mode=block

  redis:
    host: ${REDIS_HOST:localhost}
    port: 6379
    password: ${REDIS_PASSWORD:}
    timeout: 2000ms
    lettuce:
      pool:
        max-active: 8
        max-idle: 8
        min-idle: 0

  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${JWT_ISSUER_URI:http://localhost:8081}
          jwk-set-uri: ${JWT_JWK_SET_URI:http://localhost:8081/.well-known/jwks.json}

server:
  port: 8080

eureka:
  instance:
    prefer-ip-address: true
    instance-id: ${spring.application.n}:${random.value}
  client:
    service-url:
      defaultZone: ${EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE:http://localhost:8761/eureka/}
    register-with-eureka: true
    fetch-registry: true

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
    gateway:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true

resilience4j:
  circuitbreaker:
    configs:
      default:
        sliding-window-size: 10
        minimum-number-of-calls: 5
        permitted-number-of-calls-in-half-open-state: 3
        automatic-transition-from-open-to-half-open-enabled: true
        wait-duration-in-open-state: 5s
        failure-rate-threshold: 50
        event-consumer-buffer-size: 10
    instances:
      user-service-cb:
        base-config: default
      banking-service-cb:
        base-config: default

logging:
  level:
    org.springframework.cloud.gateway: DEBUG
    org.springframework.security: DEBUG
    org.springframework.web.reactive.function.client: TRACE